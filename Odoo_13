#**How to add button in tree view header near “Create” and “Import” buttons Odoo10**#

https://supportuae.wordpress.com/2017/09/06/how-to-add-button-in-tree-view-header-near-create-and-import-buttons-odoo10/
#**add domain in existing field**#

 @api.onchange('partner_id')
    def onchange_partner_id(self):
        context = self._context
        partner_id = context.get('default_partner_id') if context.get('default_partner_id') else self.partner_id.id
        if type(partner_id) == int:
            return {'domain': {'lead_id' : [('partner_id', '=', partner_id),('stage_id.name','!=',('Trash','Inforced'))]}}
        else:
            return {'domain': {'lead_id' : [('id','=',0)]}}
            
#**auto fill name field on create time**#
customer = self.env['res.partner'].search([('id','=',vals.get('partner_id'))])
        partner = customer.name
        customer_first3 = partner[:3].upper()
        product_ids = self.env['product.product'].search([('id','in',vals.get('product_ids')[0][2])])
        product_id = product_ids[0].name
        product_first1 = product_id[:1].upper()
        print(product_id)
          if vals.get('name', 'New') == 'New':
        no_seq = self.env['ir.sequence'].next_by_code('crm.lead') or 'New'
        vals['name'] = product_first1 + customer_first3 +no_seq
        result = super(NmtMatter, self).create(vals)
       return result
#**get value from M2M field at CREATE & WRITE time **# 
       def write(self,vals):
        if vals.get('product_ids'):
            product_id_name=[]
            product_ids = self.env['product.product'].search([('id','in',vals.get('product_ids')[0][2])])
       
      @api.model
      def create(self,vals):
        product_id_name=[]
        product_ids = self.env['product.product'].search([('id','in',vals.get('product_ids')[0][2])])
        for result in product_ids:
        
        
        
 #**CHANGE O2M FIELD RECORD FROM IR.ACTION[CRON FUNCTION**#
        def action_nmt_comm_cal_check_policy(self):
        current_date = date.today()
        schedule_ids = self.env['nmt.comm.schedule'].search([('date','=',current_date)])
        for data in schedule_ids:
            print(current_date)
            search_comm_policy_id = self.env['hr.employee'].search([])
            update_policy_list=[]
            for res in search_comm_policy_id:
                if res.comm_policy_id:
                    old_policy = res.comm_policy_id.id
                    res.write({'comm_policy_id' : data.policy_id})
                    new_policy = res.comm_policy_id.id
                    print(old_policy)
                    update_policy_list.append([0,0,{
                                    'employee_id':  res.id,  
                                    'cur_policy_id': old_policy,
                                    'policy_id':new_policy
                                }])
                    data.write({'update_ids' : update_policy_list})
        return True
        
        
        
 #***PRINT REPORT ON BUTTON CLICK WITH FILLED CURRENT RECORD FIELD FROM WIZARD***#

            def action_print_timesheet(self):
        active_ids = self._context.get('active_ids')
        context = self._context
        for record in self.env['nmt.matter'].browse(active_ids):
            record.print_pref_employee_id = self.employee_id
            if not isinstance(record, list):
                ids = [record]
            context = dict(context or {}, active_ids=ids, active_model='nmt.matter')
            return self.env.ref('nmt_matter_management.matter_custom_report_timesheets_print').report_action(record)




#***ACTION ADD IN TREE VIEW**#
<act_window id="action_nmt_matter_print_timesheet"
            multi="True"
            key2="client_action_multi" name="Print Timesheet"
            res_model="nmt.matter.print_timeshhet" src_model="nmt.matter"
            view_mode="form" target="new" view_type="form" />
        
      #***ACTION ADD IN FORM VIEW**# 
         <act_window id="action_nmt_matter_print_timesheet"
            name="Print Timesheet"
            src_model="nmt.matter"
            res_model="nmt.matter.print_timeshhet"
            view_mode="tree"
            view_id="view_nmt_matter_print_timeshhet_wizard"
           
        />
